
len([],0). % Если передан пустой список
len([_| Tail], A):- % Рекурсивно считаем длинну: считаем длинну хвоста, прибавляем один и возвращаем ответ (тормозим в 1 предикате)
    len(Tail, A1),
    A is A1 + 1.
start([], _, []). % Если пустой список, то ничего не делаем
start([X|Teil], Cnt, A):- % Стартовый предикат
    len([X|Teil], L),
    Idx is L - Cnt,
    I is 0,
    add_before([X|Teil], I, Idx, A).

add_before([X|Tail], I, Idx, [X|T]):- % Добавляем эл-ты пока I < Idx, хвост передаем дльше и инкрементируем I
    I < Idx,!, 
    I1 is I + 1,
    add_before(Tail, I1, Idx, T).

add_before(_, _, _, []). % Иначе возвращаем пустой список

% ?- start([1,4,2,3,8], 3, [3,8]). => false.
% ?- start([1,4,2,3,8], 2, L1). => L1 = [1, 4, 2].